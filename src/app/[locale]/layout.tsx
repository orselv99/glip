import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/component/theme";
import LayoutWrapper from "@/component/layout";
import { hasLocale, NextIntlClientProvider, useMessages } from "next-intl";
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{locale: string}>;
}>) {
  // Ensure that the incoming `locale` is valid
  const {locale} = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
  
  return (
    // ThemeProvider 에 의해 
    // html tag 내 className, style 이 추가되어 hydrate error 가 발생할 수 밖에 없어서
    // suppressHydrationWarning 추가
    <html lang="en" suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}  >
        {/* system 설정을 따라감 */}
        <ThemeProvider 
          attribute='class'
          defaultTheme='system'
          enableSystem
          disableTransitionOnChange
        >
          <LayoutWrapper>
            <NextIntlClientProvider>
              {children}
            </NextIntlClientProvider>
          </LayoutWrapper>
        </ThemeProvider>
      </body>
    </html>
  );
}
